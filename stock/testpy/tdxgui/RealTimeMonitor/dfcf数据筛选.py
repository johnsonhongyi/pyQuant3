import pandas as pd

def parse_related_info(row):
    """
    根據異動類型解析「相關信息」欄位，並返回一個包含 (漲幅, 價格, 量) 的元組。
    """
    related_info = row['相关信息']
    stock_type = row['异动类型']
    
    try:
        # 將字串轉換為浮點數列表
        values = [float(v.strip()) for v in related_info.split(',')]
    except (ValueError, IndexError):
        return None, None, None
    
    漲幅 = None
    價格 = None
    量 = None

    if stock_type in ['火箭发射', '快速反弹', '60日大幅上涨', '高台跳水', '竞价下跌']:
        # 這幾種類型通常漲跌幅和價格在前面
        if len(values) >= 3:
            漲幅 = round(values[0] * 100, 1) # 漲跌幅在索引 0
            價格 = values[1]                # 價格在索引 1
            量 = 0.0
    elif stock_type in ['大笔买入', '有大买盘', '有大卖盘']:
        # 這幾種類型交易量在前面，漲跌幅在中間
        if len(values) >= 4:
            漲幅 = round(values[2] * 100, 1) # 漲跌幅在索引 2
            價格 = values[1]                # 價格在索引 1
            量_原始 = values[0]
            量 = round(量_原始 / 100 / 10000, 1) # 將股數轉換為萬手
    elif stock_type in ['封涨停板', '60日新高']:
        # 這幾種類型價格在前，漲跌幅在最後
        if len(values) >= 4:
            漲幅 = round(values[3] * 100, 1) # 漲跌幅在索引 3
            價格 = values[0]                # 價格在索引 0
            量_原始 = values[1]
            量 = round(量_原始 / 100 / 10000, 1) # 將股數轉換為萬手
    elif stock_type in ['打开涨停板']:
        # 漲跌幅在最後，價格在前面
        if len(values) >= 2:
            漲幅 = round(values[1] * 100, 1) # 漲跌幅在索引 1
            價格 = values[0]                # 價格在索引 0
            量 = 0.0
    elif stock_type in ['60日新高']:
        # 根據您提供的錯誤數據，60日新高似乎有另一種格式
        if len(values) >= 3:
            漲幅 = round(values[2] * 100, 1) # 漲幅在索引 2
            價格 = values[1]                # 價格在索引 1
            量 = 0.0
    else:
        # 其他未知的異動類型，返回 None
        return None, None, None
        
    return 漲幅, 價格, 量

# --- 以下是完整的 DataFrame 處理範例 ---

# 假設這是你的完整數據源
full_data = {
    '时间': ["09:44:06", "09:41:45", "09:40:42", "09:38:12", "09:35:12", "09:32:48", "09:31:18", "09:31:18"],
    '代码': ["000001", "600000", "000002", "601398", "600036", "000002", "600000", "000003"],
    '名称': ["平安银行", "浦发银行", "万科A", "工商银行", "招商银行", "万科A", "浦发银行", "其他股票"],
    '异动类型': ['火箭发射', '火箭发射', '火箭发射', '60日新高', '快速反弹', '大笔买入', '有大卖盘', '竞价下跌'],
    '相关信息': [
        '0.092118,44.34000,0.092118',
        '0.086207,44.10000,0.086207',
        '0.070197,43.45000,0.070197',
        '16.200000,16.18000,0.032546', # 修正后的60日新高数据
        '0.007020,15.78000,0.007020',
        '1733800,15.40000,-0.017230,26700520.00',
        '1630900,15.45000,-0.014040,25278793.00',
        '-0.020421,15.35000,-0.020421'
    ]
}
df = pd.DataFrame(full_data)

# 應用解析函數並擴展欄位
parsed_data = df.apply(parse_related_info, axis=1, result_type='expand')
df[['涨幅', '价格', '量']] = parsed_data

# 使用 fillna(0.0) 填充 NaN 值
df[['涨幅', '价格', '量']] = df[['涨幅', '价格', '量']].fillna(0.0)

# 刪除原始的“相关信息”和“板块”列
# df.drop(columns=['相关信息'], inplace=True)

# 重新排序列
df = df[['时间', '代码', '名称', '异动类型', '涨幅', '价格', '量']]

print(df)




'''
import pandas as pd

# 假设这是你的原始 DataFrame
data = {
    '板块': list(range(1546, 1546 + 15)),
    '异动类型': [
        '火箭发射', '火箭发射', '大笔买入', '封涨停板', '封涨停板', '有大买盘',
        '有大买盘', '60日新高', '60日大幅上涨', '高台跳水', '高台跳水', '打开涨停板',
        '打开涨停板', '有大卖盘', '有大卖盘'
    ],
    '相关信息': [
        '0.092118,44.34000,0.092118',
        '0.086207,44.10000,0.086207',
        '9778545,44.66000,0.094089,436709819.70',
        '44.660000,91300,44.66000,0.100000',
        '44.660000,19890655,44.66000,0.100000',
        '985700,44.51000,0.096305,43863422.00',
        '402700,41.93000,0.032759,16865274.00',
        '44.660000,44.66000,0.100000',
        '0.076847,43.72000,0.076847',
        '0.067734,43.35000,0.067734',
        '0.068227,43.37000,0.068227',
        '44.660000,0.100000',
        '44.590000,0.098276',
        '1850000,42.94000,0.057635,79547170.00',
        '587624,41.94000,0.033005,24676208.24'
    ]
}
df = pd.DataFrame(data)

def parse_related_info(row):
    """
    根据异动类型解析“相关信息”字段，并返回一个包含 (涨幅, 价格, 量) 的元组。
    """
    related_info = row['相关信息']
    stock_type = row['异动类型']
    
    try:
        values = [float(v.strip()) for v in related_info.split(',')]
    except (ValueError, IndexError):
        return None, None, None
    
    漲幅 = None
    價格 = None
    量 = None

    if stock_type in ['火箭发射', '60日大幅上涨', '高台跳水']:
        if len(values) >= 3:
            漲幅 = round(values[0] * 100, 1)
            價格 = values[1]
            量 = 0.0
    elif stock_type in ['大笔买入', '有大买盘', '有大卖盘']:
        if len(values) >= 4:
            漲幅 = round(values[2] * 100, 1)
            價格 = values[1]
            量 = round(values[0] / 100 / 10000, 1)
    elif stock_type in ['封涨停板', '60日新高']:
        if len(values) >= 4:
            漲幅 = round(values[3] * 100, 1)
            價格 = values[0]
            量 = round(values[1] / 100 / 10000, 1)
    elif stock_type in ['打开涨停板']:
        if len(values) >= 2:
            漲幅 = round(values[1] * 100, 1)
            價格 = values[0]
            量 = 0.0
    else:
        return None, None, None
        
    return 漲幅, 價格, 量

# 使用 apply 函数，返回一个包含元组的 Series
parsed_data = df.apply(parse_related_info, axis=1, result_type='expand')

# 将新的 Series 分配给新的列
df[['涨幅', '价格', '量']] = parsed_data

# 使用 fillna(0.0) 填充 NaN 值
df[['涨幅', '价格', '量']] = df[['涨幅', '价格', '量']].fillna(0.0)

# 清除原始的“相关信息”列
df.drop(columns=['相关信息'], inplace=True)

print(df)
'''



'''
import pandas as pd

# 假设这是你的原始 DataFrame
data = {
    '板块': list(range(1546, 1546 + 15)), # 示例板块编号
    '异动类型': [
        '火箭发射', '火箭发射', '大笔买入', '封涨停板', '封涨停板', '有大买盘',
        '有大买盘', '60日新高', '60日大幅上涨', '高台跳水', '高台跳水', '打开涨停板',
        '打开涨停板', '有大卖盘', '有大卖盘'
    ],
    '相关信息': [
        '0.092118,44.34000,0.092118',
        '0.086207,44.10000,0.086207',
        '9778545,44.66000,0.094089,436709819.70',
        '44.660000,91300,44.66000,0.100000',
        '44.660000,19890655,44.66000,0.100000',
        '985700,44.51000,0.096305,43863422.00',
        '402700,41.93000,0.032759,16865274.00',
        '44.660000,44.66000,0.100000',
        '0.076847,43.72000,0.076847',
        '0.067734,43.35000,0.067734',
        '0.068227,43.37000,0.068227',
        '44.660000,0.100000',
        '44.590000,0.098276',
        '1850000,42.94000,0.057635,79547170.00',
        '587624,41.94000,0.033005,24676208.24'
    ]
}
df = pd.DataFrame(data)

def simplify_related_info(row):
    """
    根据异动类型解析并简化“相关信息”字段。
    返回一个包含 涨跌幅,价格,交易量 的字符串。
    """
    related_info = row['相关信息']
    stock_type = row['异动类型']
    
    try:
        values = [float(v.strip()) for v in related_info.split(',')]
    except (ValueError, IndexError):
        return None
    
    漲跌幅 = 0.0
    價格 = 0.0
    交易量 = 0.0

    if stock_type in ['火箭发射', '60日大幅上涨', '高台跳水']:
        if len(values) >= 3:
            漲跌幅 = round(values[0] * 100, 1) # 涨跌幅乘以100并四舍五入
            價格 = values[1]
            交易量 = 0.0
    elif stock_type in ['大笔买入', '有大买盘', '有大卖盘']:
        if len(values) >= 4:
            漲跌幅 = round(values[2] * 100, 1) # 涨跌幅乘以100并四舍五入
            價格 = values[1]
            交易量 = values[0]
    elif stock_type in ['封涨停板', '60日新高']:
        if len(values) >= 4:
            漲跌幅 = round(values[3] * 100, 1) # 涨跌幅乘以100并四舍五入
            價格 = values[0]
            交易量 = values[1]
    elif stock_type in ['打开涨停板']:
        if len(values) >= 2:
            漲跌幅 = round(values[1] * 100, 1) # 涨跌幅乘以100并四舍五入
            價格 = values[0]
            交易量 = 0.0
    else:
        return None
        
    return f"{漲跌幅:.1f},{價格:.2f},{交易量:.2f}"

df['相关信息'] = df.apply(simplify_related_info, axis=1)

print(df)

'''

# import pandas as pd

# # 假設這是你的原始 DataFrame
# data = {
#     '板块': [1546, 1647, 3141, 5425, 5428, 5730, 6660, 6841, 7644, 8158, 8200, 9728, 9730, 11334, 11406],
#     '异动类型': [
#         '火箭发射', '火箭发射', '大笔买入', '封涨停板', '封涨停板', '有大买盘',
#         '有大买盘', '60日新高', '60日大幅上涨', '高台跳水', '高台跳水', '打开涨停板',
#         '打开涨停板', '有大卖盘', '有大卖盘'
#     ],
#     '相关信息': [
#         '0.092118,44.34000,0.092118',
#         '0.086207,44.10000,0.086207',
#         '9778545,44.66000,0.094089,436709819.70',
#         '44.660000,91300,44.66000,0.100000',
#         '44.660000,19890655,44.66000,0.100000',
#         '985700,44.51000,0.096305,43863422.00',
#         '402700,41.93000,0.032759,16865274.00',
#         '44.660000,44.66000,0.100000',
#         '0.076847,43.72000,0.076847',
#         '0.067734,43.35000,0.067734',
#         '0.068227,43.37000,0.068227',
#         '44.660000,0.100000',
#         '44.590000,0.098276',
#         '1850000,42.94000,0.057635,79547170.00',
#         '587624,41.94000,0.033005,24676208.24'
#     ]
# }
# df = pd.DataFrame(data)

# def simplify_related_info(row):
#     """
#     根据异动类型解析并简化“相关信息”字段。
#     返回一个包含 涨跌幅,价格,交易量 的字符串。
#     """
#     related_info = row['相关信息']
#     stock_type = row['异动类型']
    
#     # 将逗号分隔的字符串转换为数值列表
#     try:
#         values = [float(v.strip()) for v in related_info.split(',')]
#     except (ValueError, IndexError):
#         return None # 如果解析失败，返回None
    
#     漲跌幅 = 0.0
#     價格 = 0.0
#     交易量 = 0.0

#     # 根据不同的异动类型，从 values 中提取所需数据
#     if stock_type in ['火箭发射', '60日大幅上涨', '高台跳水']:
#         if len(values) >= 3:
#             漲跌幅 = values[0]
#             價格 = values[1]
#             交易量 = 0.0  # 这几种类型没有交易量信息
#     elif stock_type in ['大笔买入', '有大买盘', '有大卖盘']:
#         if len(values) >= 4:
#             漲跌幅 = values[2]
#             價格 = values[1]
#             交易量 = values[0]
#     elif stock_type in ['封涨停板', '60日新高']:
#         # 这两种类型的涨跌幅都是10%，价格和交易量位置不同
#         if len(values) >= 4:
#             漲跌幅 = values[3]
#             價格 = values[0]
#             交易量 = values[1]
#     elif stock_type in ['打开涨停板']:
#         if len(values) >= 2:
#             漲跌幅 = values[1]
#             價格 = values[0]
#             交易量 = 0.0
#     else:
#         # 其他未知的异动类型，返回None或默认值
#         return None
        
#     # 格式化并返回结果
#     return f"{漲跌幅:.4f},{價格:.2f},{交易量:.2f}"

# # 使用 apply 函数应用简化逻辑
# df['相关信息'] = df.apply(simplify_related_info, axis=1)

# print(df)

